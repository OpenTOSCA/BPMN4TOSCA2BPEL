#set( $bpelvar = "$bpelvar" )
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<process 
	xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
	name="ManagementPlan" 
	xmlns:tns="http://iaas.uni-stuttgart.de/bpmn4tosca/managementplan/"
	targetNamespace="http://iaas.uni-stuttgart.de/bpmn4tosca/managementplan/"
	xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
	xmlns:bpel4RestLight="http://iaas.uni-stuttgart.de/bpel/extensions/bpel4restlight"
	xmlns:si="http://siserver.org/wsdl"
	xmlns:xlink="http://www.w3.org/1999/xlink">

	<import importType="http://schemas.xmlsoap.org/wsdl/" location="invoker.wsdl"
		namespace="http://siserver.org/wsdl" />
	<import importType="http://www.w3.org/2001/XMLSchema" location="invoker.xsd"
		namespace="http://siserver.org/schema" /> <!-- TODO externalize NS -->
	<import importType="http://schemas.xmlsoap.org/wsdl/" location="management_plan.wsdl"
		namespace="http://iaas.uni-stuttgart.de/bpmn4tosca/managementplan/" /> <!-- Todo place_holder wsdl and namespace -->

	<extensions>
		<extension mustUnderstand="yes"
			namespace="http://iaas.uni-stuttgart.de/bpel/extensions/bpel4restlight" />
	</extensions>

	<partnerLinks>
		<partnerLink name="clientPL" initializePartnerRole="yes"
			partnerLinkType="tns:ManagementPlanPLT" myRole="ManagementPlanProvider"
			partnerRole="ManagementPlanClient" />
			
		<partnerLink name="serviceInvokerPL" initializePartnerRole="yes"
			partnerLinkType="tns:OpenTOSCAServiceInvokerPLT" 
			myRole="ServiceInvokerClient"
			partnerRole="ServiceInvoker" />
	</partnerLinks>
	
	<correlationSets>
    	<correlationSet name="ServiceInvokerCS" properties="tns:ServiceInvokerRequestProperty"/>
    </correlationSets>

	<variables>
		<variable name="input" messageType="tns:planInputMessage" />
		<variable name="output" messageType="tns:planOutputMessage" />
		<variable name="instanceDataAPIUrl" type="xsd:string" />

		<!-- The values for these variables must be provided in the instantiating 
			input message -->
		<variable name="containerAPIServiceInstanceURL" type="xsd:string" />
		<variable name="csarId" type="xsd:string" />
		<variable name="serviceTemplateIdNamespaceURI" type="xsd:string" />
		<variable name="serviceTemplateIdLocalPart" type="xsd:string" />
		<variable name="serviceInstanceId" type="xsd:string" />
		<variable name="correlationId" type="xsd:string" />
		<variable name="planCallbackUrl" type="xsd:string" />
		
		
		<!-- Variable to store service instance -->
		<variable name="serviceInstanceData" type="xsd:any" />
		
		<!-- Derived from serviceTemplateIdNamespaceURI and serviceTemplateIdLocalPart -->
		<variable name="serviceTemplateId" type="xsd:string" />
		
		<!-- Variable to store service invoker requests and responses -->
		<variable name="siAsynchInput" messageType="si:invokeOperationAsyncMessage" />
        <variable name="siResponse" messageType="si:invokeResponse" />
	</variables>

	<sequence>
		<receive createInstance="yes" name="initiate" operation="initiatePlan"
			partnerLink="clientPL" portType="ManagementPlanPLT" variable="input" />

		<!-- Get values for variables 'instanceDataAPIUrl', 'csarId', 'serviceTemplateId', 
			'serviceInstanceId' from input message These values are required to read/write 
			properties of the service instance the plan is working on -->
		<assign name="initFromInputMsg" validate="no">
			<copy>
				<from variable="input" part="payload">
					<query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath2.0"><![CDATA[//*[local-name()='instanceDataAPIUrl']]]></query>
				</from>
				<to variable="instanceDataAPIUrl" />
			</copy>
			<copy>
				<from variable="input" part="payload">
					<query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath2.0"><![CDATA[//*[local-name()='csarId']]]></query>
				</from>
				<to variable="csarId" />
			</copy>
			<copy>
				<from variable="input" part="payload">
					<query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath2.0"><![CDATA[//*[local-name()='serviceTemplateIdNamespaceURI']]]></query>
				</from>
				<to variable="serviceTemplateIdNamespaceURI" />
			</copy>
			<copy>
				<from variable="input" part="payload">
					<query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath2.0"><![CDATA[//*[local-name()='serviceTemplateIdLocalPart']]]></query>
				</from>
				<to variable="serviceTemplateIdLocalPart" />
			</copy>
			<copy>
				<!-- Derive service template id -->
				<from>
					<query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath2.0"><![CDATA[string(concat('{', ${bpelvar}[serviceTemplateIdNamespaceURI]/text(), '}', ${bpelvar}[serviceTemplateIdLocalPart]/text()))]]></query>
				</from>
				<to variable="serviceTemplateId" />
			</copy>
			<copy>
				<from variable="input" part="payload">
					<query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath2.0"><![CDATA[//*[local-name()='serviceInstanceId']]]></query>
				</from>
				<to variable="serviceInstanceId" />
			</copy>
			<copy>
				<from variable="input" part="payload">
					<query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath2.0"><![CDATA[//*[local-name()='planCallbackUrl']]]></query>
				</from>
				<to variable="planCallbackUrl" />
			</copy>
		</assign>
		
		
		<!-- If no serviceInstanceId was passed with the plan input message it is assumed that this is a build plan
		     Hence, a service instance has to be created  before excuting management operations -->
		<if> 
			<condition expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath2.0">
				<![CDATA[string-length(${bpelvar}[serviceInstanceId]/text()) = 0]]>
			</condition>
				<extensionActivity>
					<bpel4RestLight:POST accept="application/xml" 
					response="serviceInstanceId" 
					uri="${bpelvar}[containerAPIServiceInstanceURL]/serviceInstances?csarID=${bpelvar}[csarId]&amp;serviceTemplateID=${bpelvar}[serviceTemplateId]"/>
				</extensionActivity>
		</if>
		<extensionActivity>
			<bpel4RestLight:GET name="getServiceInstanceData"
				accept="application/xml" 
				response="serviceInstanceData" 
				uri="${bpelvar}[containerAPIServiceInstanceURL]/serviceInstances?csarID=${bpelvar}[csarId]&amp;serviceTemplateID=${bpelvar}[serviceTemplateId]"/>
		</extensionActivity>
		
		<!-- Perform management operations -->
		#parse( "/src/main/resources/templates/bpel_management_activity_scope_template.xml" )
		
		<!-- Send response of plan execution to client -->
		<assign name="createOutputMsg" validate="no">
			<copy>
				<from variable="correlationId" />
				<to variable="output" part="payload">
					<query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath2.0"><![CDATA[//*[local-name()='correlationId']]]></query>
				</to>
			</copy>
			<copy>
				<from variable="serviceInstanceId" />
				<to variable="output" part="payload">
					<query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath2.0"><![CDATA[//*[local-name()='serviceInstanceId']]]></query>
				</to>
			</copy>
		</assign>
		<invoke name="callbackClient" inputVariable="output" operation="onResult"
			partnerLink="clientPL" portType="tns:ManagementPlanClientPT" />
	</sequence>
</process>
